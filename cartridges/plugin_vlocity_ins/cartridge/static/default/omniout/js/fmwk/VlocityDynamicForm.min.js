!function(){!function(){"use strict";var scripts=document.getElementsByTagName("script"),scriptName=scripts[scripts.length-1].src,parts=scriptName.split("/"),partsLength=parts.length-1,thisScript=parts[partsLength--];if(""===thisScript&&(thisScript=parts[partsLength--]),-1!=scriptName.indexOf("__"))for(;-1==thisScript.indexOf("__")&&partsLength>=0;)thisScript=parts[partsLength],partsLength--;var lowerCasePrefix=-1==thisScript.indexOf("__")?"":thisScript.substring(0,thisScript.indexOf("__")+2);if(""!==(lowerCasePrefix=""===lowerCasePrefix&&localStorage.getItem("nsPrefix")?localStorage.getItem("nsPrefix"):lowerCasePrefix)&&(lowerCasePrefix=/__$/.test(lowerCasePrefix)?lowerCasePrefix:lowerCasePrefix+"__"),0===lowerCasePrefix.length)return function(){return""!==(lowerCasePrefix=window.nsPrefix?window.nsPrefix:lowerCasePrefix)&&(lowerCasePrefix=/__$/.test(lowerCasePrefix)?lowerCasePrefix:lowerCasePrefix+"__"),lowerCasePrefix};var resolvedNs=null}();!function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}}()({1:[function(require,module,exports){angular.module("VlocityDynamicForm",["vlocity","ngMessages","ui.mask","sldsangular"]),require("../node_modules/angular-ui-mask/dist/mask.min.js"),require("./modules/vlocitydynamicform/directives/VlocityDynamicForm.js"),require("./modules/vlocitydynamicform/templates/templates.js")},{"../node_modules/angular-ui-mask/dist/mask.min.js":4,"./modules/vlocitydynamicform/directives/VlocityDynamicForm.js":2,"./modules/vlocitydynamicform/templates/templates.js":3}],2:[function(require,module,exports){angular.module("VlocityDynamicForm").directive("vlocityDynamicForm",["$templateCache","$parse","$http","$compile","$interpolate","$document","$timeout","$locale","$sldsPopover","$rootScope","ISO_CURRENCY_INFO",function($templateCache,$parse,$http,$compile,$interpolate,$document,$timeout,$locale,$sldsPopover,$rootScope,ISO_CURRENCY_INFO){"use strict";var supported={text:{element:"input",type:"text",editable:!0,textBased:!0},email:{element:"input",type:"email",editable:!0,textBased:!0},number:{element:"input",type:"number",editable:!0,textBased:!0},password:{element:"input",type:"password",editable:!0,textBased:!0},tel:{element:"input",type:"tel",editable:!0,textBased:!0},textarea:{element:"textarea",editable:!0,textBased:!0},date:{element:"date",editable:!0,textBased:!0},datetime:{element:"datetime",editable:!0,textBased:!0},"number-range":{element:"range",type:"number",editable:!0,textBased:!0},"date-range":{element:"date-range",type:"text",editable:!0,textBased:!0},"datetime-range":{element:"date-range",type:"text",editable:!0,textBased:!0},range:{element:"input",type:"range",editable:!0,textBased:!1},checkbox:{element:"checkbox",type:"checkbox",editable:!0,textBased:!1},select:{element:"select",editable:!0,textBased:!1},checklist:{element:"checklist",editable:!1,textBased:!1},radiolist:{element:"radiolist",editable:!1,textBased:!1},fieldset:{element:"fieldset",editable:!1,textBased:!1},button:{element:"button",type:"button",editable:!1,textBased:!1},hidden:{element:"input",type:"hidden",editable:!1,textBased:!1},image:{element:"input",type:"image",editable:!1,textBased:!1},submit:{element:"button",type:"submit",editable:!1,textBased:!1}},defaultFieldMapping={type:"type",value:"value",valuesArray:{field:"values",value:"value",selected:"selected",required:"required",disabled:"disabled",readonly:"readonly",defaultSelected:"defaultSelected",label:"label"},label:"label",description:"description",readonly:"readonly",required:"required",hidden:"ishidden",min:"min",max:"max",step:"step",minLength:"minlength",maxLength:"maxlength",placeholder:"placeholder",multiple:"multiple",disabled:"disabled",dataType:"dataType",formatMask:"formatMask",customTemplate:"customTemplate",model:"model"},defaultTemplateMapping={input:"InputTemplate.tpl.html",range:"RangeInputTemplate.tpl.html",textarea:"TextareaTemplate.tpl.html",date:"DateTemplate.tpl.html","date-range":"DateRangeTemplate.tpl.html",datetime:"DateTimeTemplate.tpl.html",checkbox:"CheckboxTemplate.tpl.html",checklist:"CheckboxFieldsetTemplate.tpl.html",radiolist:"RadioFieldsetTemplate.tpl.html",sectionlegend:"SectionLegendTemplate.tpl.html",sectionlegendToggle:"SectionLegendToggleTemplate.tpl.html",select:"SelectTemplate.tpl.html"},isIE=!!navigator.userAgent.match(/Trident/g)||!!navigator.userAgent.match(/MSIE/g);return{restrict:"E",transclude:!0,link:function($scope,element,attrs,ctrl,transcludeFn){var transcludeElement,changeCallback,newElement=null,HTMLFragment=null,newChild=null,optGroups={},cbAtt="",foundOne=!1,iterElem=element,model=null,mapObject=null,fieldMapping=null,fieldSetMapping=null,pathMapping=null,templateMapping=null,newCheckboxFragment=null,newRadioFragment=null,isoCurrencyCode=$rootScope.vlocity.userCurrency||"USD",isoCurrencySymbol=ISO_CURRENCY_INFO[isoCurrencyCode].text;$scope.localeCurencySym=isoCurrencySymbol||"$",$scope.watchModel=function(modelObj,debounce){var debounceTime=debounce?800:0,saveDebounce=null;$scope.$watch(modelObj,function(newValue,oldValue){saveDebounce&&$timeout.cancel(saveDebounce),newValue!==oldValue&&isFormAutoSave()&&newValue&&(saveDebounce=$timeout(function(){var wrappedResult=angular.element(document.getElementsByName(getFormName()));$parse(wrappedResult.attr("form-on-change"))($scope,{e:!1,formValidation:$scope[getFormName()]})},debounceTime))},!0)};var extendContent=function(field){var obj={};obj[field.label]=!1,$scope.expand=$scope.expand||{},$scope.showMore=$scope.showMore||obj;var extendElement=newElement.find("[vdf-fieldset-wrapper] .extend-content");return fieldSetMapping&&fieldSetMapping.showMoreFlag&&field.valuesArray.length>fieldSetMapping.showCount&&($scope.showMore[field.label]=!0,$scope.expand[field.label]=!0),extendElement};if(angular.isDefined(attrs.ngModel)){model=$parse(attrs.ngModel)($scope)||$parse(attrs.ngModel)($scope.$parent),$scope.translate=!(!attrs.isTranslateLabels||"true"!==attrs.isTranslateLabels),mapObject=attrs.mapObject?$parse(attrs.mapObject)($scope.$parent):{},fieldMapping=_.merge({},defaultFieldMapping,mapObject.fieldMapping),fieldSetMapping=mapObject.fieldSetMapping||null,pathMapping=mapObject.pathMapping||null,templateMapping=mapObject.templateMapping||null;var bracket=function(model,base){var props=model.split(".");return(base||props.shift())+(props.length?'["'+props.join('"]["')+'"]':"")},getFieldType=function(field){var type=field.type,multiple=field.multiple?field.multiple:"";return type="radio"===(type="checkbox"===(type="dropdown"===(type=type?type.toLowerCase():"")?"select":type)&&!0===multiple?"checklist":type)?"radiolist":type},getObjField=function(field,typePath){return _.get(field,typePath)},getTemplate=function(inputType){var template,customTemplateMapping;return template=(customTemplateMapping=templateMapping,_.merge({},defaultTemplateMapping,customTemplateMapping))[inputType],$templateCache.get(template)},getModel=function(pid,field,id){var path;return(path=pathMapping&&pathMapping.path?pathMapping.path:"")?attrs.ngModel+"["+pid+"]."+path+"["+id+"]."+bracket(field):attrs.ngModel+"["+pid+"]."+bracket(field)},getFormInputName=function(pid,id){var uniqueFormName=getFormName();return uniqueFormName+="_field",uniqueFormName=isNaN(pid)?uniqueFormName:uniqueFormName+"_"+pid,uniqueFormName=isNaN(id)?uniqueFormName:uniqueFormName+"_"+id},getFormName=function(){return attrs.name?attrs.name:"vdf"},isFormAutoSave=function(){return angular.isDefined(attrs.formAutoSave)&&"true"===attrs.formAutoSave},getFieldTransform=function(rawField){var transformedField={},fieldMap=function(defaultFieldMapping,customFieldMapping){return _.merge({},defaultFieldMapping,customFieldMapping)}(defaultFieldMapping,mapObject.fieldMapping);return _.forEach(fieldMap,function(mapValue,key){var fieldValue=[];"valuesArray"===key&&rawField[mapValue.field]&&rawField[mapValue.field].length>0?_.forEach(rawField[mapValue.field],function(valuesArrayObj,valuesArrayIndex){var resultObj;_.forEach(mapValue,function(childMapValue,childKey){var childFieldValue=_.get(rawField[mapValue.field][valuesArrayIndex],childMapValue);void 0!==childFieldValue&&((resultObj=resultObj||{})[childKey]=childFieldValue)}),fieldValue[valuesArrayIndex]=resultObj}):fieldValue=_.get(rawField,mapValue),void 0!==fieldValue&&(transformedField[key]=fieldValue)}),transformedField},buildFields=function(rawField,pid,id){var customTemplateFieldPath,vdfInput,vdfSelect,extendElement,vdfOnly,vdfMin,vdfMax,vdfTimeMin,vdfTimeMax,vdfDateMin,vdfDateMax,valueIndex,templateScope=$scope.$new(),field={};if(field=getFieldTransform(rawField),"$"!==String(id).charAt(0)&&!0!==field.hidden)return field.customTemplate?(customTemplateFieldPath=attrs.ngModel+"["+pid+"]",pathMapping&&pathMapping.path&&(customTemplateFieldPath=customTemplateFieldPath+"."+pathMapping.path+"["+id+"]"),newElement='<vloc-cmp customtemplate="'+field.customTemplate+'" loaded="true" records="'+customTemplateFieldPath+'" form-name="'+getFormName()+'" form-auto-save="'+isFormAutoSave()+'"></vloc-cmp>',this.append(newElement),void(newElement=null)):void(angular.isDefined(supported[getFieldType(field)])&&!1!==supported[getFieldType(field)]?(HTMLFragment=(HTMLFragment=getTemplate(supported[getFieldType(field)].element)).replace(/\[\[vdf-form-field-name\]\]/gi,getFormName()+"."+getFormInputName(pid,id)),templateScope.field=field,templateScope.attrs=attrs,HTMLFragment=$compile(HTMLFragment)(templateScope),newElement=angular.element(HTMLFragment),vdfInput=newElement.find("[vdf-input]"),angular.isDefined(supported[getFieldType(field)].type)&&vdfInput.attr("type",supported[getFieldType(field)].type),angular.isDefined(supported[getFieldType(field)].editable)&&supported[getFieldType(field)].editable&&(vdfInput.attr("name",getFormInputName(pid,id)),vdfInput.attr("ng-model",getModel(pid,fieldMapping.value,id)),angular.isDefined(field.readonly)&&vdfInput.attr("ng-readonly",field.readonly),angular.isDefined(field.required)&&vdfInput.attr("ng-required",field.required),angular.isDefined(field.disabled)&&vdfInput.attr("ng-disabled",field.disabled),angular.isDefined(field.value)&&vdfInput.attr("value",field.value)),angular.isDefined(supported[getFieldType(field)].textBased)&&supported[getFieldType(field)].textBased&&(angular.isDefined(field.minLength)&&vdfInput.attr("ng-minlength",field.minLength),angular.isDefined(field.maxLength)&&vdfInput.attr("ng-maxlength",field.maxLength),angular.isDefined(field.validate)&&vdfInput.attr("ng-pattern",field.validate),angular.isDefined(field.placeholder)&&vdfInput.attr("placeholder",field.placeholder),angular.isDefined(field.readonly)&&field.readonly&&vdfInput.css("background-color","#e0e5ee")),"text"===getFieldType(field)&&field.formatMask&&(vdfInput.attr("ui-mask",field.formatMask),vdfInput.attr("ui-mask-placeholder",""),isIE&&$scope.watchModel(""+getModel(pid,fieldMapping.value,id),!0)),"date"===getFieldType(field)&&(vdfInput.attr("slds-date-picker","true"),vdfInput.attr("data-date-format","shortDate"),vdfInput.keypress(function(event){event.preventDefault()}),$scope.watchModel(""+getModel(pid,fieldMapping.value,id))),"datetime"===getFieldType(field)&&((vdfInput=newElement.find("[vdf-data]")).attr("slds-date-picker","true"),vdfInput.attr("data-date-format","shortDate"),vdfInput.keypress(function(event){event.preventDefault()}),(vdfInput=newElement.find("[vdf-time]")).attr("slds-time-picker","true"),vdfInput.attr("data-time-format","mediumTime"),vdfInput.attr("name",getFormInputName(pid)),vdfInput.keypress(function(event){event.preventDefault()}),$scope.watchModel(""+getModel(pid,fieldMapping.value,id))),"date-range"!==getFieldType(field)&&"datetime-range"!==getFieldType(field)||(vdfOnly=newElement.find("[data-vdf-only]"),vdfMin=newElement.find("[data-vdf-min]"),vdfMax=newElement.find("[data-vdf-max]"),vdfTimeMin=newElement.find("[time-vdf-min]"),vdfTimeMax=newElement.find("[time-vdf-max]"),field.min===field.max?(vdfOnly.attr("ng-true-value",field.min),vdfOnly.attr("ng-false-value","null"),vdfOnly.attr("type","checkbox"),vdfOnly.attr("ng-model",getModel(pid,fieldMapping.value,id)),moment.locale(window.navigator.language),"datetime-range"===getFieldType(field)?field.value=moment(field.min).format("LLL"):field.value=moment(field.min).format("LL")):(vdfDateMin=new Date(field.min).setHours(0,0,0),vdfDateMax=new Date(field.max).setHours(0,0,0),vdfMin.attr("slds-date-picker","true"),vdfMin.attr("data-date-format","shortDate"),vdfMin.attr("data-min-date",vdfDateMin),vdfMin.attr("ng-model",getModel(pid,fieldMapping.value,id)+".min"),vdfMax.attr("slds-date-picker","true"),vdfMax.attr("data-date-format","shortDate"),vdfMax.attr("data-max-date",vdfDateMax),vdfMax.attr("ng-model",getModel(pid,fieldMapping.value,id)+".max"),"datetime-range"===getFieldType(field)&&((vdfInput=newElement.find("[vdf-time]")).attr("slds-time-picker","true"),vdfInput.attr("data-time-format","mediumTime"),vdfTimeMin.attr("ng-model",getModel(pid,fieldMapping.value,id)+".min"),vdfTimeMax.attr("ng-model",getModel(pid,fieldMapping.value,id)+".max")))),"number"===getFieldType(field)||"range"===getFieldType(field)?(angular.isDefined(field.min)&&vdfInput.attr("min",field.min),angular.isDefined(field.max)&&vdfInput.attr("max",field.max),angular.isDefined(field.step)?vdfInput.attr("step",field.step):vdfInput.attr("step","any")):["text","textarea"].indexOf(getFieldType(field))>-1?angular.isDefined(field.splitBy)&&newElement.attr("ng-list",field.splitBy):"checkbox"===getFieldType(field)?(angular.isDefined(field.isOn)&&newElement.attr("ng-true-value",field.isOn),angular.isDefined(field.isOff)&&newElement.attr("ng-false-value",field.isOff),angular.isDefined(field.slaveTo)&&newElement.attr("ng-checked",field.slaveTo)):"checklist"===getFieldType(field)?(field[fieldMapping.value]=field.value,angular.isDefined(field.valuesArray)&&(!angular.isDefined(model[field.model])||angular.isObject(model[field.model]),extendElement=extendContent(field),newCheckboxFragment=newElement.find("[vdf-fieldset-element]").replaceWith(""),angular.forEach(field.valuesArray,function(option,childId){newChild=newCheckboxFragment.clone(),vdfInput=newChild.find("[vdf-input]"),valueIndex=field.userValues?_.findIndex(field.userValues,function(attr){return Object.keys(attr)[0]===option.value}):childId,vdfInput.attr("name",getFormInputName(pid,id)+"_"+childId),vdfInput.attr("ng-model",getModel(pid,fieldMapping.value,id)+"["+valueIndex+']["'+option.value+'"]'),angular.isDefined(option.class)&&vdfInput.attr("ng-class",option.class),angular.isDefined(option.disabled)&&vdfInput.attr("ng-disabled",option.disabled),angular.isDefined(option.readonly)&&vdfInput.attr("ng-readonly",option.readonly),angular.isDefined(option.required)&&vdfInput.attr("ng-required",option.required),angular.isDefined(option.callback)&&vdfInput.attr("ng-change",option.callback),angular.isDefined(option.isOn)&&vdfInput.attr("ng-true-value",option.isOn),angular.isDefined(option.isOff)&&vdfInput.attr("ng-false-value",option.isOff),angular.isDefined(option.value)&&newChild.attr("value",option.value),angular.isDefined(option.label)&&newChild.find("[vdf-checkbox-label]").html(option.label),!$scope.showMore[field.label]||fieldSetMapping.showCount>childId?newElement.find("[vdf-fieldset-wrapper] .visible-content").append(newChild):extendElement.append(newChild)}),newCheckboxFragment=null)):"radio"===getFieldType(field)||"radiolist"===getFieldType(field)?angular.isDefined(field.valuesArray)&&(extendElement=extendContent(field),newRadioFragment=newElement.find("[vdf-fieldset-element]").replaceWith(""),angular.forEach(field.valuesArray,function(option,childId){newChild=newRadioFragment.clone(),(vdfInput=newChild.find("[vdf-input]")).attr("name",getFormInputName(pid,id)),vdfInput.attr("ng-model",getModel(pid,fieldMapping.value,id)),angular.isDefined(option.class)&&vdfInput.attr("ng-class",option.class),angular.isDefined(option.disabled)&&vdfInput.attr("ng-disabled",option.disabled),angular.isDefined(option.callback)&&vdfInput.attr("ng-change",option.callback),angular.isDefined(option.readonly)&&vdfInput.attr("ng-readonly",option.readonly),angular.isDefined(option.required)&&vdfInput.attr("ng-required",option.required),vdfInput.attr("value",option.value),angular.isDefined(field.value)&&field.value===option.value&&vdfInput.attr("checked","checked"),angular.isDefined(option.label)&&newChild.find("[vdf-radio-label]").html(option.label),!$scope.showMore[field.label]||fieldSetMapping.showCount>childId?newElement.find("[vdf-fieldset-wrapper] .visible-content").append(newChild):extendElement.append(newChild)}),newRadioFragment=null):"select"===getFieldType(field)?(angular.isDefined(field.multiple)&&!1!==field.multiple&&newElement.find("[vdf-select]").attr("multiple","multiple"),angular.isDefined(field.empty)&&!1!==field.empty&&newElement.append(angular.element($document[0].createElement("option")).attr("value","").html(field.empty)),(vdfSelect=newElement.find("[vdf-select]")).attr("name",getFormInputName(pid,id)),vdfSelect.attr("ng-model",getModel(pid,fieldMapping.value,id)),angular.isDefined(field.required)&&vdfSelect.attr("ng-required",field.required),angular.isDefined(field.disabled)&&vdfSelect.attr("ng-disabled",field.disabled),angular.isDefined(field.autoOptions)?newElement.attr("ng-options",field.autoOptions):angular.isDefined(field.valuesArray)&&(angular.forEach(field.valuesArray,function(option,childId){(newChild=angular.element($document[0].createElement("option"))).attr("value",childId),angular.isDefined(option.disabled)&&newChild.attr("ng-disabled",option.disabled),angular.isDefined(option.label)&&newChild.html(option.label),angular.isDefined(option.value)&&newChild.attr("value",option.value),angular.isDefined(option.group)?(angular.isDefined(optGroups[option.group])||(optGroups[option.group]=angular.element($document[0].createElement("optgroup")),optGroups[option.group].attr("label",option.group)),optGroups[option.group].append(newChild)):vdfSelect.append(newChild)}),angular.equals(optGroups,{})||(angular.forEach(optGroups,function(optGroup){vdfSelect.append(optGroup)}),optGroups={}))):"image"===getFieldType(field)?(angular.isDefined(field.label)&&newElement.attr("alt",field.label),angular.isDefined(field.source)&&newElement.attr("src",field.source)):"hidden"===getFieldType(field)?(newElement.attr("name",getFormInputName(pid,id)),newElement.attr("ng-model",bracket(getObjField(field,fieldMapping.model),attrs.ngModel)),angular.isDefined(field.value)&&(!function(obj,props,value,lastProp,buildParent){props=props.split("."),lastProp=lastProp||props.pop();for(var i=0;i<props.length;i++)obj=obj[props[i]]=obj[props[i]]||{};buildParent||(obj[lastProp]=value)}(model,getObjField(field,fieldMapping.model),angular.copy(field.value)),newElement.attr("value",field.value))):"number-range"===getFieldType(field)&&(vdfOnly=newElement.find("[data-vdf-only]"),vdfMin=newElement.find("[data-vdf-min]"),vdfMax=newElement.find("[data-vdf-max]"),field.min===field.max?(vdfOnly.attr("ng-true-value",field.min),vdfOnly.attr("ng-false-value","null"),vdfOnly.attr("type","checkbox"),vdfOnly.attr("ng-model",getModel(pid,fieldMapping.value,id))):(vdfMin.attr("ng-model",getModel(pid,fieldMapping.value,id)+".min"),vdfMax.attr("ng-model",getModel(pid,fieldMapping.value,id)+".max"),angular.isDefined(field.min)&&(vdfMin.attr("min",field.min),vdfMax.attr("min",field.min)),angular.isDefined(field.max)&&(vdfMin.attr("max",field.max),vdfMax.attr("max",field.max)),angular.isDefined(field.step)&&(vdfMin.attr("step",field.step),vdfMax.attr("step",field.step)))),"radio"!==getFieldType(field)&&(angular.isDefined(field.class)&&newElement.attr("ng-class",field.class),"checklist"!==getFieldType(field)&&(angular.isDefined(field.disabled)&&newElement.attr("ng-disabled",field.disabled),angular.isDefined(field.callback)&&(cbAtt=["button","fieldset","image","submit"].indexOf(getFieldType(field))>-1?"ng-click":"ng-change",newElement.attr(cbAtt,field.callback)))),angular.isDefined(field.attributes)&&angular.forEach(field.attributes,function(val,attr){newElement.attr(attr,val)}),this.append(newElement),newElement=null):(newElement=angular.element("<span></span>"),angular.isDefined(field.label)&&angular.element(newElement).html(field.label),angular.forEach(field,function(val,attr){["label","type"].indexOf(attr)>-1||newElement.attr(attr,val)}),this.append(newElement),newElement=null))};for(pathMapping?angular.forEach(model,function(value,key){var fieldList=_.get(value,pathMapping.path);angular.isDefined(fieldList)&&fieldList.length>0&&function(field,id,label){HTMLFragment=getTemplate("sectionlegend");var sectionLegend=(newElement=angular.element(HTMLFragment)).find("[vdf-section-legend]");sectionLegend.attr("vdf-replace")?sectionLegend.replaceWith(label):sectionLegend.text(label),this.append(newElement),newElement=null}.call(this,value,key,value.Name),angular.forEach(fieldList,function(field,index){buildFields.call(this,field,key,index)},element)},element):angular.forEach(model,function(field,index){buildFields.call(this,field,index)},element);!(iterElem.parent().length<=0||"HTML"===iterElem.parent().prop("tagName"));)try{if(["form","ngForm"].indexOf(attrs.$normalize(angular.lowercase(iterElem.parent()[0].nodeName)))>-1){foundOne=!0;break}iterElem=iterElem.parent()}catch(e){break}newElement=foundOne?angular.element($document[0].createElement("ng-form")):angular.element("<form></form>"),angular.forEach(attrs.$attr,function(attName,attIndex){newElement.attr(attName,attrs[attIndex])}),newElement.attr("name",getFormName()),newElement.attr("model",attrs.ngModel),newElement.removeAttr("ng-model"),angular.forEach(element[0].classList,function(clsName){newElement[0].classList.add(clsName)}),newElement.addClass("vlocity-dynamic-form"),newElement.attr("novalidate",!0),newElement.attr("form-on-change")&&(changeCallback=$parse(newElement.attr("form-on-change")),newElement.on("change",function(e){$timeout(function(){changeCallback($scope,{e:e,formValidation:$scope[getFormName()]})},0)})),transcludeFn($scope,function(clone,scope){transcludeElement=angular.element("<div></div>").append(clone)}),newElement.append(transcludeElement.find("header").html()),newElement.append(element.contents()),newElement.append(transcludeElement.find("footer").html()),$compile(newElement)($scope),element.replaceWith(newElement)}}}}])},{}],3:[function(require,module,exports){angular.module("VlocityDynamicForm").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("DateTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true">\n    <label class="slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>&#160;\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);"\n                slds-popover\n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"\n                nubbin-direction="bottom-left"\n                tooltip="true"\n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n    \n    <div class="slds-form-element__control">\n    \x3c!-- data-container attribute enables the datepicker modal to get the priority. Without data-container, datepicker modal will be hidden(partially) in a container when overflow-y:scroll --\x3e\n        <input type="text" class="slds-input" vdf-input="true" autocomplete="off" data-container="{{attrs.dateContainer}}"/> \n    </div>\n\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFEmptyDate\', \'Please enter a value for this field\')}}</div>\n        <div class="slds-form-element__help" ng-message="date">{{::$root.vlocity.getCustomLabel(\'VDFValidDate\', \'Please enter a valid date.\')}}</div>\n    </div>\n</div>'),$templateCache.put("RadioFieldsetTemplate.tpl.html",'<fieldset class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true" vdf-element-container="true">\n    <legend class="slds-form-element__legend slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        <label class="slds-form-element__label">\n            {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n        </label>\n        <div class="slds-form-element__icon" ng-if="::field.description">\n            <a href="javascript:void(0);" \n                    slds-popover \n                    data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"  \n                    nubbin-direction="bottom-left" \n                    tooltip="true" \n                    data-title="{{::field.description}}">\n                <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n                <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n            </a>\n        </div>\n    </legend>\n    <div class="slds-form-element__control" vdf-fieldset-wrapper="true">\n        <label class="slds-radio" vdf-fieldset-element="true">\n            <input type="radio" name="options" vdf-input="true"/>\n            <span class="slds-radio--faux"></span>\n            <span class="slds-form-element__label" vdf-radio-label="true">Radio Label One</span>\n        </label>\n        <div class="visible-content"></div>\n        <div class="extend-content" ng-show="!expand[field.label]"></div>\n\n        <a ng-if="showMore[field.label]" ng-click="expand[field.label] = !expand[field.label]">\n            <small ng-show="expand[field.label]">\n                <slds-button-svg-icon sprite="\'utility\'" icon="\'jump_to_bottom\'"></slds-button-svg-icon> {{::$root.vlocity.getCustomLabel(\'VDFShowMore\', \'Show More\')}}\n            </small>\n            <small ng-show="!expand[field.label]">\n                <slds-button-svg-icon sprite="\'utility\'" size="\'small\'" icon="\'jump_to_top\'"></slds-button-svg-icon> {{::$root.vlocity.getCustomLabel(\'VDFShowLess\', \'Show Less\')}}\n            </small>\n        </a>\n    </div>\n\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFFieldIsRequired\',\'This field is required.\')}}</div>\n    </div>\n</fieldset>\n'),$templateCache.put("DateTimeTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true">\n    <label class="slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>&#160;\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);"\n                slds-popover\n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"\n                nubbin-direction="bottom-left"\n                tooltip="true"\n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n\n    <div class="slds-form-element__control slds-grid slds-wrap slds-grid--pull-padded-x-small">\n        <div class="slds-size--1-of-1 slds-medium-size--1-of-2 slds-p-around--x-small">\n            <input type="text" vdf-input="true" vdf-data="true" class="slds-input" autocomplete="off" data-container="{{attrs.dateContainer}}"/>\n        </div>\n        <div class="slds-size--1-of-1 slds-medium-size--1-of-2 slds-p-around--x-small">\n            <input type="text" vdf-input="true" vdf-time="true"  class="slds-input" autocomplete="off" data-container="{{attrs.dateContainer}}"/>\n        </div>\n    </div>\n\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFEmptyDate\', \'Please enter a value for this field\')}}</div>\n        <div class="slds-form-element__help" ng-message="date">{{::$root.vlocity.getCustomLabel(\'VDFValidDate\', \'Please enter a valid date.\')}}</div>\n    </div>\n</div>'),$templateCache.put("CheckboxTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true" vdf-element-container="true">\n    <div class="slds-form-element__control">\n        <label class="slds-checkbox">\n            <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n            <input type="checkbox" name="options" vdf-input="true"/>\n            <span class="slds-checkbox--faux"></span>\n            <span class="slds-form-element__label"> {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}</span>\n        </label>\n        <div class="slds-form-element__icon" ng-if="::field.description">\n            <a href="javascript:void(0);" \n                    slds-popover \n                    data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"  \n                    nubbin-direction="bottom-left" \n                    tooltip="true" \n                    data-title="{{::field.description}}">\n                <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n                <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n            </a>\n        </div>\n    </div>\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFFieldIsRequired\',\'This field is required.\')}}</div>\n    </div>\n</div>'),$templateCache.put("RangeInputTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true">\n    <label class="slds-text-heading--label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);" \n                slds-popover \n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"  \n                nubbin-direction="bottom-left" \n                tooltip="true" \n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n\n    \x3c!-- Work in progress code --\x3e\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);">\n          <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n          <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n\n    <div class="slds-form-element__control" ng-show="field.min === field.max">\n        <label class="slds-checkbox">\n            <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n            <input vdf-input="true" data-vdf-only type="checkbox" name="options"/>\n            <span class="slds-checkbox--faux"></span>\n            <span ng-if="::field.dataType == \'currency\'">{{::localeCurencySym}}</span>\n            <span class="slds-form-element__label">{{field.min}}</span>\n            <span ng-if="::field.dataType == \'percentage\'">%</span>\n        </label>\n    </div>\n    <div class="slds-form-element__control slds-grid slds-wrap slds-grid--pull-padded" ng-show="field.min !== field.max">\n        <div class="slds-form-element__control slds-col--padded slds-size--1-of-1 slds-medium-size--3-of-6 slds-large-size--6-of-12" >\n            <label>From</label>\n            <div class="slds-input-has-fixed-addon">\n                <span class="slds-form-element__addon" ng-if="::field.dataType == \'currency\'">{{::localeCurencySym}}</span>\n                <input data-vdf-min vdf-input="true" vdf-input-name="true" class="slds-input" type="number" placeholder="{{::field.min}}" />\n                <span class="slds-form-element__addon" ng-if="::field.dataType == \'percentage\'">%</span>\n            </div>\n            \x3c!-- <input data-vdf-min vdf-input="true" vdf-input-name="true" class="slds-input" type="number" placeholder="{{field.min}}" /> --\x3e\n        </div>\n        <div class="slds-form-element__control slds-col--padded slds-size--1-of-1 slds-medium-size--3-of-6 slds-large-size--6-of-12">\n            <label>To</label>\n            <div class="slds-input-has-fixed-addon">\n                <span class="slds-form-element__addon" ng-if="::field.dataType == \'currency\'">{{::localeCurencySym}}</span>\n                <input data-vdf-max vdf-input="true" vdf-input-name="true" class="slds-input" type="number" placeholder="{{::field.max}}" />\n                <span class="slds-form-element__addon" ng-if="::field.dataType == \'percentage\'">%</span>\n            </div>\n        </div>\n    </div>\n    \x3c!-- test --\x3e\n\n    \x3c!-- Error status: {{[[vdf-form-field-name]] | json}} --\x3e\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFEmptyDate\', \'Please enter a value for this field\')}}</div>\n        <div class="slds-form-element__help" ng-message="invalid">{{::$root.vlocity.getCustomLabel(\'VDFInvalidField\', \'Please enter a value for this invalid field\')}}</div>\n        <div class="slds-form-element__help" ng-message="email">{{::$root.vlocity.getCustomLabel(\'VDFValidEmail\', \'Please enter a valid email address\')}}</div>\n        <div class="slds-form-element__help" ng-message="number">{{::$root.vlocity.getCustomLabel(\'VDFValidNumber\', \'Please enter a valid number\')}}</div>\n        <div class="slds-form-element__help" ng-message="min">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooSmall\', \'This field value is too small\')}} <span ng-if="::field.min">({{::$root.vlocity.getCustomLabel(\'VDFFieldMin\', \'minimum is {1}\', field.min)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="max">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooHigh\', \'This field value is too high\')}} <span ng-if="::field.max">({{::$root.vlocity.getCustomLabel(\'VDFFieldMax\', \'maximum is {1}\', field.max)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="minlength">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooShort\', \'This field is too short\')}} <span ng-if="field.minLength">({{::$root.vlocity.getCustomLabel(\'VDFFieldMimChar\', \'minimum is {1} characters\', field.minLength)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="maxlength">\n'+"            {{::$root.vlocity.getCustomLabel('VDFFieldTooLong', 'This field is too long')}} <span ng-if=\"field.maxLength\">({{::$root.vlocity.getCustomLabel('VDFFieldMaxChar', 'maximum is {1} characters', field.maxLength)}})</span>\n        </div>\n    </div>\n</div>\n"),$templateCache.put("InputTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true">\n    <label class="slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);" \n                slds-popover \n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}" \n                nubbin-direction="bottom-left" \n                tooltip="true" \n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n    <div class="slds-form-element__control slds-input-has-fixed-addon">\n        <span class="slds-form-element__addon" ng-if="::field.dataType == \'currency\'" ng-bind-html="::localeCurencySym"></span>\n        <input vdf-input="true" vdf-input-name="true" class="slds-input" type="text"/>\n        <span class="slds-form-element__addon" ng-if="::field.dataType == \'percentage\'">%</span>\n    </div>\n\n    \x3c!-- Error status: {{[[vdf-form-field-name]] | json}} --\x3e\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFEmptyDate\', \'Please enter a value for this field\')}}</div>\n        <div class="slds-form-element__help" ng-message="invalid">{{::$root.vlocity.getCustomLabel(\'VDFInvalidField\', \'Please enter a value for this invalid field\')}}</div>\n        <div class="slds-form-element__help" ng-message="email">{{::$root.vlocity.getCustomLabel(\'VDFValidEmail\', \'Please enter a valid email address\')}}</div>\n        <div class="slds-form-element__help" ng-message="number">{{::$root.vlocity.getCustomLabel(\'VDFValidNumber\', \'Please enter a valid number\')}}</div>\n        <div class="slds-form-element__help" ng-message="min">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooSmall\', \'This field value is too small\')}} <span ng-if="::field.min">({{::$root.vlocity.getCustomLabel(\'VDFFieldMin\', \'minimum is {1}\', field.min)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="max">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooHigh\', \'This field value is too high\')}} <span ng-if="::field.max">({{::$root.vlocity.getCustomLabel(\'VDFFieldMax\', \'maximum is {1}\', field.max)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="minlength">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooShort\', \'This field is too short\')}} <span ng-if="field.minLength">({{::$root.vlocity.getCustomLabel(\'VDFFieldMimChar\', \'minimum is {1} characters\', field.minLength)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="maxlength">\n'+"            {{::$root.vlocity.getCustomLabel('VDFFieldTooLong', 'This field is too long')}} <span ng-if=\"field.maxLength\">({{::$root.vlocity.getCustomLabel('VDFFieldMaxChar', 'maximum is {1} characters', field.maxLength)}})</span>\n        </div>\n    </div>\n</div>\n"),$templateCache.put("SectionLegendToggleTemplate.tpl.html",'<div class="slds-section slds-m-top--small slds-is-open" vdf-element-container>\n    <div class="slds-section__title">\n        <h3 href="#void" class="slds-section__title-action">\n            <button class="slds-button slds-button--icon-container">\n                <svg aria-hidden="true" class="slds-button__icon">\n                    <use xmlns:xlink="{{\'/assets/icons/utility-sprite/svg/symbols.svg#switch\' | sldsStaticResourceURL}}"></use>\n                </svg>\n            </button>\n'+"            <span vdf-section-legend vdf-replace>{{::$root.vlocity.getCustomLabel('VDFSectionTitle', 'Section Title')}}<span>\n        </h3>\n    </div>\n</div>"),$templateCache.put("TextareaTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true">\n    <label class="slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>&#160;\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);" \n                slds-popover \n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}" \n                nubbin-direction="bottom-left" \n                tooltip="true" \n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n    <div class="slds-form-element__control">\n        <textarea class="slds-textarea" placeholder="" vdf-input="true"></textarea>\n    </div>\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">\n            {{::$root.vlocity.getCustomLabel(\'VDFEmptyDate\', \'Please enter a value for this field\')}}\n        </div>\n        <div class="slds-form-element__help" ng-message="minlength">\n            {{::$root.vlocity.getCustomLabel(\'VDFFieldTooShort\', \'This field is too short\')}} <span ng-if="field.minLength">({{::$root.vlocity.getCustomLabel(\'VDFFieldMimChar\', \'minimum is {1} characters\', field.minLength)}})</span>\n        </div>\n        <div class="slds-form-element__help" ng-message="maxlength">\n'+"            {{::$root.vlocity.getCustomLabel('VDFFieldTooLong', 'This field is too long')}} <span ng-if=\"field.maxLength\">({{::$root.vlocity.getCustomLabel('VDFFieldMaxChar', 'maximum is {1} characters', field.maxLength)}})</span>\n        </div>\n    </div>\n</div>"),$templateCache.put("SelectTemplate.tpl.html",'<div class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true" vdf-element-container="true">\n    <label class="slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n    <div class="slds-form-element__icon" ng-if="::field.description">\n        <a href="javascript:void(0);" \n                slds-popover \n                data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"  \n                nubbin-direction="bottom-left" \n                tooltip="true" \n                data-title="{{::field.description}}">\n            <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n            <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n        </a>\n    </div>\n    <div class="slds-form-element__control">\n        <div class="slds-select--container">\n            <select class="slds-select" vdf-select="true">\n                \x3c!-- <option vdf-select-option="true">Sample option</option> --\x3e\n            </select>\n        </div>\n    </div>\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFFieldIsRequired\',\'This field is required.\')}}</div>\n    </div>\n</div>\n'),$templateCache.put("CheckboxFieldsetTemplate.tpl.html",'<fieldset class="slds-form-element" ng-class="{\'slds-has-error\': [[vdf-form-field-name]].$invalid && [[vdf-form-field-name]].$touched, \'is-required\': required}" vdf-element-container="true" vdf-element-container="true">\n    <legend class="slds-form-element__legend slds-form-element__label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        <label class="slds-form-element__label">\n            {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n        </label>\n        <div class="slds-form-element__icon" ng-if="::field.description">\n            <a href="javascript:void(0);" \n                    slds-popover \n                    data-container="{{attrs.tooltipContainer ? attrs.tooltipContainer : \'.via-slds\'}}"  \n                    nubbin-direction="bottom-left" \n                    tooltip="true" \n                    data-title="{{::field.description}}">\n                <slds-svg-icon sprite="\'utility\'" size="\'x-small\'" icon="\'info\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon>\n                <span class="slds-assistive-text">{{::$root.vlocity.getCustomLabel(\'VDFHelp\', \'Help\')}}</span>\n            </a>\n        </div>\n    </legend>\n    <div class="slds-form-element__control" vdf-fieldset-wrapper="true">\n        <label class="slds-checkbox" vdf-fieldset-element="true">\n            <input type="checkbox" name="options" vdf-input="true">\n            <span class="slds-checkbox--faux"></span>\n            <span class="slds-form-element__label" vdf-checkbox-label="true">Checkbox Label</span>\n        </label>\n        \n        <div class="visible-content"></div>\n        <div class="extend-content" ng-show="!expand[field.label]"></div>\n\n        <a ng-if="showMore[field.label]" ng-click="expand[field.label] = !expand[field.label]">\n            <small ng-show="expand[field.label]">\n                <slds-button-svg-icon sprite="\'utility\'" icon="\'jump_to_bottom\'"></slds-button-svg-icon> {{::$root.vlocity.getCustomLabel(\'VDFShowMore\', \'Show More\')}}\n            </small>\n            <small ng-show="!expand[field.label]">\n                <slds-button-svg-icon sprite="\'utility\'" size="\'small\'" icon="\'jump_to_top\'"></slds-button-svg-icon> {{::$root.vlocity.getCustomLabel(\'VDFShowLess\', \'Show Less\')}}\n            </small>\n        </a>\n    </div>\n\n    \x3c!-- Standard Error Messages --\x3e\n    <div ng-messages="[[vdf-form-field-name]].$error" ng-if="[[vdf-form-field-name]].$touched" role="alert">\n        <div class="slds-form-element__help" ng-message="required">{{::$root.vlocity.getCustomLabel(\'VDFFieldIsRequired\',\'This field is required.\')}}</div>\n    </div>\n</fieldset>\n'),$templateCache.put("SectionLegendTemplate.tpl.html",'<div class="slds-section" vdf-element-container>\n    <div class="slds-section__title slds-m-top--medium">\n        <h3 vdf-section-legend></h3>\n    </div>\n</div>\n'),$templateCache.put("DateRangeTemplate.tpl.html",'<div class="slds-form-element"  vdf-element-container="true">\n    <label class="slds-text-heading--label">\n        <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n        {{:: translate && field.label ? $root.vlocity.getCustomLabel(field.label, field.label) : field.label}}\n    </label>\n\n    <div class="slds-form-element__control" ng-show="field.min === field.max">\n        <label class="slds-checkbox">\n            <abbr class="slds-required" title="required" ng-if="::field.required">*</abbr>\n            <input vdf-input="true" data-vdf-only type="checkbox" name="options"/>\n            <span class="slds-checkbox--faux"></span>\n            <span class="slds-form-element__label">{{field.value}}</span>\n        </label>\n    </div>\n\n    <div class="slds-form-element__control slds-grid slds-wrap slds-grid--pull-padded" ng-show="field.min !== field.max">\n        <div class="slds-form-element__control slds-col--padded slds-size--1-of-1 slds-medium-size--3-of-6 slds-large-size--6-of-12" >\n            <label>{{::$root.vlocity.getCustomLabel(\'VDFFrom\', \'From\')}}</label>\n            <div class="slds-grid">\n                <input data-vdf-min vdf-input="true" vdf-input-name="true" placeholder="Date"\n                    class="slds-input" ng-class="{\'slds-size--1-of-2 slds-m-around--x-small\': field.type==\'datetime-range\'}" />\n                <input ng-show="field.type==\'datetime-range\'" time-vdf-min vdf-time="true" vdf-input="true" placeholder="Time"\n                    class="slds-input slds-size--1-of-2 slds-m-around--x-small"/>\n            </div>\n        </div>\n        <div class="slds-form-element__control slds-col--padded slds-size--1-of-1 slds-medium-size--3-of-6 slds-large-size--6-of-12">\n            <label>{{::$root.vlocity.getCustomLabel(\'VDFTo\', \'To\')}}</label>\n            <div class="slds-grid">\n                <input data-vdf-max vdf-input="true" vdf-input-name="true" placeholder="Date"\n                    class="slds-input" ng-class="{\'slds-size--1-of-2 slds-m-around--x-small\': field.type==\'datetime-range\'}" />\n                <input ng-show="field.type==\'datetime-range\'" time-vdf-max vdf-time="true" vdf-input="true" placeholder="Time"\n                    class="slds-input slds-size--1-of-2 slds-m-around--x-small"/>\n            </div>\n        </div>\n    </div>\n</div>')}])},{}],4:[function(require,module,exports){!function(){"use strict";angular.module("ui.mask",[]).value("uiMaskConfig",{maskDefinitions:{9:/\d/,A:/[a-zA-Z]/,"*":/[a-zA-Z0-9]/},clearOnBlur:!0,clearOnBlurPlaceholder:!1,escChar:"\\",eventsToHandle:["input","keyup","click","focus"],addDefaultPlaceholder:!0,allowInvalidValue:!1}).provider("uiMask.Config",function(){var e={};this.maskDefinitions=function(n){return e.maskDefinitions=n},this.clearOnBlur=function(n){return e.clearOnBlur=n},this.clearOnBlurPlaceholder=function(n){return e.clearOnBlurPlaceholder=n},this.eventsToHandle=function(n){return e.eventsToHandle=n},this.addDefaultPlaceholder=function(n){return e.addDefaultPlaceholder=n},this.allowInvalidValue=function(n){return e.allowInvalidValue=n},this.$get=["uiMaskConfig",function(n){var t=n;for(var a in e)angular.isObject(e[a])&&!angular.isArray(e[a])?angular.extend(t[a],e[a]):t[a]=e[a];return t}]}).directive("uiMask",["uiMask.Config",function(e){function n(e){return e===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(e.type||e.href||~e.tabIndex)}return{priority:100,require:"ngModel",restrict:"A",compile:function(){var t=angular.copy(e);return function(e,a,r,i){function u(e){return angular.isDefined(e)?(function(e){var n=0;if(A=[],T=[],B="",angular.isString(e)){j=0;var t=!1,a=0,r=e.split(""),i=!1;angular.forEach(r,function(e,r){i?(i=!1,B+=e,n++):U.escChar===e?i=!0:U.maskDefinitions[e]?(A.push(n),B+=k(r-a),T.push(U.maskDefinitions[e]),n++,t||j++,t=!1):"?"===e?(t=!0,a++):(B+=e,n++)})}A.push(A.slice().pop()+1),I=function(){var e,t=B.split("");A&&!isNaN(A[0])&&angular.forEach(A,function(e){t[e]="_"}),e=t.join("");var a=0;return e.replace(/[_]+/g,"_").split("_").filter(function(e){return""!==e}).map(function(n){var t=e.indexOf(n,a);return a=t+1,{value:n,position:t}})}(),Z=A.length>1}(e),Z?(function(){H=L=m(i.$modelValue||""),F=b(H),_=p(H),r.maxlength&&a.attr("maxlength",2*A[A.length-1]),!W&&U.addDefaultPlaceholder&&a.attr("placeholder",B);for(var e=i.$modelValue,n=i.$formatters.length;n--;)e=i.$formatters[n](e);i.$viewValue=e||"",i.$render()}(),q||(a.bind("blur",$),a.bind("mousedown mouseup",V),a.bind("keydown",O),a.bind(U.eventsToHandle.join(" "),D),q=!0),!0):h()):h()}function o(e){e&&(B=e,!Z||0===a.val().length&&angular.isDefined(r.placeholder)||a.val(b(m(a.val()))))}function s(e){return Z?(H=m(e||""),_=p(H),i.$setValidity("mask",_),H.length&&(_||U.allowInvalidValue)?b(H):void 0):e}function h(){return Z=!1,q&&(a.unbind("blur",$),a.unbind("mousedown",V),a.unbind("mouseup",V),a.unbind("keydown",O),a.unbind("input",D),a.unbind("keyup",D),a.unbind("click",D),a.unbind("focus",D),q=!1),angular.isDefined(W)?a.attr("placeholder",W):a.removeAttr("placeholder"),angular.isDefined(G)?a.attr("maxlength",G):a.removeAttr("maxlength"),a.val(i.$modelValue),i.$viewValue=i.$modelValue,!1}function p(e){return!e.length||e.length>=j}function m(e){var n,t,r="",i=a[0],l=T.slice(),u=N,o=u+S(i),c="";return e=e.toString(),n=0,t=e.length-B.length,angular.forEach(I,function(a){var r=a.position;r>=u&&o>r||(r>=u&&(r+=t),e.substring(r,r+a.value.length)===a.value&&(c+=e.slice(n,r),n=r+a.value.length))}),e=c+e.slice(n),angular.forEach(e.split(""),function(e){l.length&&l[0].test(e)&&(r+=e,l.shift())}),r}function b(e){var n="",t=A.slice();return angular.forEach(B.split(""),function(a,r){e.length&&r===t[0]?(n+=e.charAt(0)||"_",e=e.substr(1),t.shift()):n+=a}),n}function k(e){var n,t=angular.isDefined(r.uiMaskPlaceholder)?r.uiMaskPlaceholder:r.placeholder;return angular.isDefined(t)&&t[e]?t[e]:"space"===(n=angular.isDefined(r.uiMaskPlaceholderChar)&&r.uiMaskPlaceholderChar?r.uiMaskPlaceholderChar:"_").toLowerCase()?" ":n[0]}function $(){if((U.clearOnBlur||U.clearOnBlurPlaceholder&&0===H.length&&r.placeholder)&&(N=0,z=0,_&&0!==H.length||("",a.val(""),e.$apply(function(){i.$pristine||i.$setViewValue("")}))),H!==X){var n=a.val(),t=""===H&&n&&angular.isDefined(r.uiMaskPlaceholderChar)&&"space"===r.uiMaskPlaceholderChar;t&&a.val(""),function(e){var n;if(angular.isFunction(window.Event)&&!e.fireEvent)try{n=new Event("change",{view:window,bubbles:!0,cancelable:!1})}catch(t){(n=document.createEvent("HTMLEvents")).initEvent("change",!1,!0)}finally{e.dispatchEvent(n)}else"createEvent"in document?((n=document.createEvent("HTMLEvents")).initEvent("change",!1,!0),e.dispatchEvent(n)):e.fireEvent&&e.fireEvent("onchange")}(a[0]),t&&a.val(n)}X=H}function V(e){"mousedown"===e.type?a.bind("mouseout",M):a.unbind("mouseout",M)}function M(){z=S(this),a.unbind("mouseout",M)}function O(e){var n=8===e.which,t=x(this)-1||0,r=90===e.which&&e.ctrlKey;if(n){for(;t>=0;){if(P(t)){C(this,t+1);break}t--}K=-1===t}r&&(a.val(""),e.preventDefault())}function D(n){var t=(n=n||{}).which,r=n.type;if(16!==t&&91!==t){var u,o=a.val(),c=F,s=!1,f=m(o),h=L,d=x(this)||0,v=N||0,g=d-v,p=A[0],w=A[f.length]||A.slice().shift(),y=z||0,$=S(this)>0,E=y>0,V=o.length>c.length||y&&o.length>c.length-y,M=o.length<c.length||y&&o.length===c.length-y,O=t>=37&&40>=t&&n.shiftKey,T=8===t||"keyup"!==r&&M&&-1===g,I=46===t||"keyup"!==r&&M&&0===g&&!E,j=(37===t||T||"click"===r)&&d>p;if(z=S(this),!O&&(!$||"click"!==r&&"keyup"!==r&&"focus"!==r)){if(T&&K)return a.val(B),e.$apply(function(){i.$setViewValue("")}),void C(this,v);if("input"===r&&M&&!E&&f===h){for(;T&&d>p&&!P(d);)d--;for(;I&&w>d&&-1===A.indexOf(d);)d++;var H=A.indexOf(d);(f=f.substring(0,H)+f.substring(H+1))!==h&&(s=!0)}for(u=b(f),F=u,L=f,!s&&o.length>u.length&&(s=!0),a.val(u),s&&e.$apply(function(){i.$setViewValue(u)}),V&&p>=d&&(d=p+1),j&&d--,d=d>w?w:p>d?p:d;!P(d)&&d>p&&w>d;)d+=j?-1:1;if((j&&w>d||V&&!P(v))&&d++,N=d,function(){try{return document.createEvent("TouchEvent"),!0}catch(e){return!1}}()&&!T&&d<f.length){for(var R=f.length;R<u.length&&(!P(R)||k[R]!==u[R]);)R++;d=R}C(this,d)}}}function P(e){return A.indexOf(e)>-1}function x(e){if(!e)return 0;if(void 0!==e.selectionStart)return e.selectionStart;if(document.selection&&n(a[0])){e.focus();var t=document.selection.createRange();return t.moveStart("character",e.value?-e.value.length:0),t.text.length}return 0}function C(e,t){if(!e)return 0;if(0!==e.offsetWidth&&0!==e.offsetHeight)if(e.setSelectionRange)n(a[0])&&(e.focus(),e.setSelectionRange(t,t));else if(e.createTextRange){var r=e.createTextRange();r.collapse(!0),r.moveEnd("character",t),r.moveStart("character",t),r.select()}}function S(e){return e?void 0!==e.selectionStart?e.selectionEnd-e.selectionStart:window.getSelection?window.getSelection().toString().length:document.selection?document.selection.createRange().text.length:0:0}var A,T,B,I,j,H,_,F,L,N,z,K,Z=!1,q=!1,W=r.placeholder,G=r.maxlength,J=i.$isEmpty;i.$isEmpty=function(e){return J(Z?m(e||""):e)};var Q=!1;r.$observe("modelViewValue",function(e){"true"===e&&(Q=!0)}),r.$observe("allowInvalidValue",function(e){U.allowInvalidValue=""===e||!!e,s(i.$modelValue)});var U={};r.uiOptions?(U=e.$eval("["+r.uiOptions+"]"),U=angular.isObject(U[0])?function(e,n){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(void 0===n[t]?n[t]=angular.copy(e[t]):angular.isObject(n[t])&&!angular.isArray(n[t])&&(n[t]=angular.extend({},e[t],n[t])));return n}(t,U[0]):t):U=t,r.$observe("uiMask",u),angular.isDefined(r.uiMaskPlaceholder)?r.$observe("uiMaskPlaceholder",o):r.$observe("placeholder",o),angular.isDefined(r.uiMaskPlaceholderChar)&&r.$observe("uiMaskPlaceholderChar",function(){return u(r.uiMask)}),i.$formatters.unshift(s),i.$parsers.unshift(function(e){return Z?(H=m(e||""),_=p(H),i.$viewValue=H.length?b(H):"",i.$setValidity("mask",_),_||U.allowInvalidValue?Q?i.$viewValue:H:void 0):e});var X=a.val();a.bind("mousedown mouseup",V),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var n=Object(this),t=n.length>>>0;if(0===t)return-1;var a=0;if(arguments.length>1&&((a=Number(arguments[1]))!=a?a=0:0!==a&&a!==1/0&&a!==-1/0&&(a=(a>0||-1)*Math.floor(Math.abs(a)))),a>=t)return-1;for(var r=a>=0?a:Math.max(t-Math.abs(a),0);t>r;r++)if(r in n&&n[r]===e)return r;return-1})}}}}])}()},{}]},{},[1])}();
//# sourceMappingURL=VlocityDynamicForm.min.js.map